version: "3.7"

services:
  # image project
  app:
    image: php-composer-node
    # container_name: php
    # build:
    #   # args:
    #   #   user: banana
    #   #   uid: 1000
    #   context: .
    #   dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - .:/var/www
    depends_on:
      - redis

  # nginx
  nginx:
    # container_name: nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/

  # db mysql
  mysql:
    # container_name: mysql
    image: mysql:5.7.22
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    working_dir: /var/lib/mysql
    volumes:
      - ./.docker/mysql:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  # queue
  #   queue:
  #     container_name: queue
  #     image: laravel-app
  #     restart: unless-stopped
  #     command: "php artisan queue:work"
  #     volumes:
  #       - .:/var/www
  #     depends_on:
  #       - redis
  #       - app

  #redis
  redis:
    # container_name: redis
    image: redis:latest

volumes:
  .docker:
  docker:
  .:
